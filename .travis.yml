language: rust
addons:
  apt:
    packages:
    - gcc
    - g++
    - libleveldb-dev
    - libssl-dev
rust:
- stable
cache:
  directories:
  - "$HOME/.cargo"
  - "$HOME/.local"
  - "$TRAVIS_BUILD_DIR/target"
  - "$TRAVIS_BUILD_DIR/sandbox_tests/target"
sudo: false
env:
  global:
  - RUST_LOG=off
  - CLIPPY_VERS=0.0.142
  - RUSTFMT_VERS=0.9.0
install:
- |
  if [ ! -f "$HOME/.local/lib/libsodium.a" ]; then
    wget https://download.libsodium.org/libsodium/releases/libsodium-1.0.13.tar.gz
    tar xvf libsodium-1.0.13.tar.gz
    cd libsodium-1.0.13
    ./configure --prefix=$HOME/.local
    make
    make install
    cd ..
  fi
- export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/.local/lib
- export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$HOME/.local/lib/pkgconfig
- |
  if [[ "$FEATURE" == "clippy" ]]; then
    cargo clippy --version | grep $CLIPPY_VERS || cargo install clippy --force --vers $CLIPPY_VERS
  fi
- |
  if [[ "$FEATURE" == "fmt" ]]; then
    cargo-audit -V || cargo install cargo-audit --force
    rustfmt -V | grep $RUSTFMT_VERS || cargo install rustfmt --vers $RUSTFMT_VERS --force
    cargo update
  fi
- cargo install --list
script: skip
jobs:
  include:
  - stage: lint
    env:
    - FEATURE=fmt
    script:
    - cargo audit
    - cargo fmt -- --write-mode=diff
    - cd sandbox_tests && cargo fmt -- --write-mode=diff
  - stage: lint
    rust: nightly-2017-07-05
    env:
    - FEATURE=clippy
    script:
    - cargo clippy -- -D warnings
  - stage: lint
    rust: nightly-2017-07-05
    env:
    - FEATURE=clippy
    - SANDBOX=true
    script:
    - cd sandbox_tests && cargo clippy -- -D warnings
  - stage: test
    script:
    - cargo test
    - RUST_LOG=off cargo test --manifest-path sandbox_tests/Cargo.toml
notifications:
  slack:
    rooms:
      secure: jR9W2Gz4RPs5RCswXU/+MH2UpDzXFfvBTZ6YAdDO+g+xIV9BRVQoAHcM5eDi3+WBUXww/yQYldEN26kUH/TjnRnk48ThTBjfTyf3Iu/g4z9WTX7YorFsDzuDk03kIZ+g0hgZnugmVC2QwOB7hyacHCLtEsNhkYsQ6FVpf5yzFLIsQNtKwhkza/gPmFUmqxSht6S4Qe6oYLOU08LppQQd0U2vzP03mHEd8zXD08F3+06t58sE0AvFJGHRP6SukNXXopfEQ4rsx1TtzNrSSn0QU/BPLzofl5lmJ8dajtDSh12/f4ag4Fvf+/RLrQrcPb1+yW9G7Ip+OuhuaRSoBBvbkwtE3B2jHknReM4uA0PMLat5RrN0MmtgRjLCavEj9ORIkd1JJ1RmbC26DIJWd+kaLhZ6+C3vfK5A/aIQa9Shn2xD5bjOcsSpPmgiJ10HeoWDc9YLfaXQd3ezOk+Ye9nWhMnbgIlUX8qq89o9IN0Ikdj/62yTbBBmIovLhjxleu/EbKDlcDW/9I3+b5H766+/8RorBXztARuJ8BeBUfWeENgEC+8poQXG1b2TEIurmYOGSfZEsY1WjdU2PZ/f3TyU/eE55rvnPyWyINV/TtSKDyl5bfNbEM28BbbDjzYY7450JcTvuvlKpqCYG9M3Te3Hrb3nbQJfeXbtMeQv307gm1k=
